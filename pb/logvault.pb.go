// Code generated by protoc-gen-go. DO NOT EDIT.
// source: logvault.proto

/*
Package logvault is a generated protocol buffer package.

It is generated from these files:
	logvault.proto

It has these top-level messages:
	PushRequest
	PushResponse
*/
package logvault

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PushRequest struct {
	Log      string `protobuf:"bytes,1,opt,name=log" json:"log,omitempty"`
	Prefix   string `protobuf:"bytes,2,opt,name=prefix" json:"prefix,omitempty"`
	Hostname string `protobuf:"bytes,3,opt,name=hostname" json:"hostname,omitempty"`
}

func (m *PushRequest) Reset()                    { *m = PushRequest{} }
func (m *PushRequest) String() string            { return proto.CompactTextString(m) }
func (*PushRequest) ProtoMessage()               {}
func (*PushRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *PushRequest) GetLog() string {
	if m != nil {
		return m.Log
	}
	return ""
}

func (m *PushRequest) GetPrefix() string {
	if m != nil {
		return m.Prefix
	}
	return ""
}

func (m *PushRequest) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

type PushResponse struct {
	Status string `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
}

func (m *PushResponse) Reset()                    { *m = PushResponse{} }
func (m *PushResponse) String() string            { return proto.CompactTextString(m) }
func (*PushResponse) ProtoMessage()               {}
func (*PushResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *PushResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func init() {
	proto.RegisterType((*PushRequest)(nil), "logvault.PushRequest")
	proto.RegisterType((*PushResponse)(nil), "logvault.PushResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Logee service

type LogeeClient interface {
	PushLog(ctx context.Context, in *PushRequest, opts ...grpc.CallOption) (*PushResponse, error)
}

type logeeClient struct {
	cc *grpc.ClientConn
}

func NewLogeeClient(cc *grpc.ClientConn) LogeeClient {
	return &logeeClient{cc}
}

func (c *logeeClient) PushLog(ctx context.Context, in *PushRequest, opts ...grpc.CallOption) (*PushResponse, error) {
	out := new(PushResponse)
	err := grpc.Invoke(ctx, "/logvault.Logee/PushLog", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Logee service

type LogeeServer interface {
	PushLog(context.Context, *PushRequest) (*PushResponse, error)
}

func RegisterLogeeServer(s *grpc.Server, srv LogeeServer) {
	s.RegisterService(&_Logee_serviceDesc, srv)
}

func _Logee_PushLog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PushRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogeeServer).PushLog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/logvault.Logee/PushLog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogeeServer).PushLog(ctx, req.(*PushRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Logee_serviceDesc = grpc.ServiceDesc{
	ServiceName: "logvault.Logee",
	HandlerType: (*LogeeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PushLog",
			Handler:    _Logee_PushLog_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "logvault.proto",
}

func init() { proto.RegisterFile("logvault.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 171 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xcb, 0xc9, 0x4f, 0x2f,
	0x4b, 0x2c, 0xcd, 0x29, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x80, 0xf1, 0x95, 0x82,
	0xb9, 0xb8, 0x03, 0x4a, 0x8b, 0x33, 0x82, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84, 0x04, 0xb8,
	0x98, 0x73, 0xf2, 0xd3, 0x25, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0x40, 0x4c, 0x21, 0x31, 0x2e,
	0xb6, 0x82, 0xa2, 0xd4, 0xb4, 0xcc, 0x0a, 0x09, 0x26, 0xb0, 0x20, 0x94, 0x27, 0x24, 0xc5, 0xc5,
	0x91, 0x91, 0x5f, 0x5c, 0x92, 0x97, 0x98, 0x9b, 0x2a, 0xc1, 0x0c, 0x96, 0x81, 0xf3, 0x95, 0xd4,
	0xb8, 0x78, 0x20, 0x86, 0x16, 0x17, 0xe4, 0xe7, 0x15, 0xa7, 0x82, 0xcc, 0x28, 0x2e, 0x49, 0x2c,
	0x29, 0x2d, 0x86, 0x1a, 0x0c, 0xe5, 0x19, 0x39, 0x73, 0xb1, 0xfa, 0xe4, 0xa7, 0xa7, 0xa6, 0x0a,
	0x59, 0x71, 0xb1, 0x83, 0x34, 0xf8, 0xe4, 0xa7, 0x0b, 0x89, 0xea, 0xc1, 0xdd, 0x8a, 0xe4, 0x30,
	0x29, 0x31, 0x74, 0x61, 0x88, 0xd1, 0x4a, 0x0c, 0x49, 0x6c, 0x60, 0x2f, 0x19, 0x03, 0x02, 0x00,
	0x00, 0xff, 0xff, 0x51, 0x8b, 0x60, 0xa0, 0xe4, 0x00, 0x00, 0x00,
}
